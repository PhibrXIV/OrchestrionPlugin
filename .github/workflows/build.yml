name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  PUBLIC_NAME: OrchestrionPlugin
  SOLUTION_NAME: Orchestrion
  INTERNAL_NAME: OrchestrionPlugin
  CONFIGURATION: Release
  PLATFORM: x64
  RELEASE_DIR: Orchestrion\bin\Release\x64\orchestrion
  PERSONAL_PLUGIN_REPO: PhibrXIV/DalamudPluginRepo
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:
    if: ${{ contains(toJSON(github.event.commits.*.message), 'build:') || contains(toJSON(github.event.commits.*.message), 'build(')}}
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Extract Branch
        id: extract_branch
        shell: pwsh
        run: |
          $branch_name = 'main'
          $commit_messages = @'
          ${{ toJSON(github.event.commits) }}
          '@ | ConvertFrom-Json
          foreach ($commit in $commit_messages) {
            if ($commit.message -match 'build\(([^)]+)\):') { $branch_name = $matches[1]; break }
          }
          "branch_name=$branch_name" >> $env:GITHUB_OUTPUT

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Download Dalamud
        shell: pwsh
        run: |
          $branch_name = '${{ steps.extract_branch.outputs.branch_name }}'
          if ($branch_name -eq 'main') { $url = 'https://goatcorp.github.io/dalamud-distrib/latest.zip' }
          else { $url = "https://goatcorp.github.io/dalamud-distrib/$branch_name/latest.zip" }
          Invoke-WebRequest -Uri $url -OutFile latest.zip
          Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev\"

      - name: Restore
        run: dotnet restore -r win-x64 ${{ env.SOLUTION_NAME }}.sln

      - name: Build
        run: dotnet build ${{ env.SOLUTION_NAME }}.sln -c ${{ env.CONFIGURATION }} -p:Platform=${{ env.PLATFORM }}

      - name: Test
        run: dotnet test ${{ env.SOLUTION_NAME }}.sln -c ${{ env.CONFIGURATION }} -p:Platform=${{ env.PLATFORM }} --no-build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: PluginRepoZip
          path: ${{ env.RELEASE_DIR }}
          if-no-files-found: error

  deploy:
    needs: build
    if: ${{ contains(toJSON(github.event.commits.*.message), 'build:') || contains(toJSON(github.event.commits.*.message), 'build(')}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout plugin repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.PERSONAL_PLUGIN_REPO }}
          token: ${{ secrets.PAT }}
          ref: master
          fetch-depth: 0

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: PluginRepoZip
          path: plugins/${{ env.INTERNAL_NAME }}

      - name: Commit and push to master
        uses: EndBug/add-and-commit@v9
        with:
          add: --all
          author_name: GitHub Action
          author_email: github-actions[bot]@users.noreply.github.com
          message: Update ${{ env.INTERNAL_NAME }}
          branch: master
          push: true
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
